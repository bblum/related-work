Ben Blum <bblum@andrew.cmu.edu>
15-712

VMware ESX

I read this paper a year and a half ago for 15-799. Here is an adapted/refreshed
version of my review from then.

================
==== Praise ====
================

The paper is structured so as to present the basic low-level mechanisms of the
memory management first, then later show how they more high-level algorithms are
built on top of them. This makes the paper very easy to follow.

The content-based sharing algorithm is described quite clearly. I wonder,
though, what "more sophisticated" ways there are to scan pages than random
scanning?

===================
==== Criticism ====
===================

The description of ballooning mentioned that ESX can use any pages that the
balloons allocate, but does not describe the process for ESX giving those pages
back to the balloon, which presumably needs to happen before deflation.

I think it's a mistake to have the balloon drivers poll once per second (or poll
at all). If there are big swings in memory pressure that last less than a
second, the ballooning won't be doing any good. This would be especially bad on
systems running multiple ballooning VMs at once.

The spike mentioned in the idle memory tax tests points at something of a deeper
problem: Windows's ZPT is an example of where "notionally idle pages" don't line
up with what their detector judges to be idle. I could see this coming up in
other applications, e.g. if you're running a language with a concurrent garbage
collector, there would be a "GC thread" that touches tons of actually-idle memory.
